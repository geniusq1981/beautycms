{
    "count": 14,
    "data": [
        {
            "title": "how-to-rewrite-your-sql-queries-in-pandas-and-more.md",
            "date": "Mon, 30 Jul 2018 00:34:50 GMT",
            "slug": "如何使用 Pandas 重写你的 SQL 查询以及其他操作",
            "category": "",
            "tag": "",
            "des": "15 年前，软件开发人员只需掌握很少的一些技能，他或她就有机会获得 95% 的工作机会。这些技能包括：当您需要快速浏览一些数据并得出初步结论时，SQL 是一种常用的工具，这些结论可能会产生一个分析报告或者是编写一个应用程序。这被称之为 探索性分析。现如今，数据会以各种各样的形式出现，不再仅仅是“关系型数据库”的同义词。您的数据可能会是 CSV 文件、纯文本、Parquet、HDF5，或者其他什么格……"
        },
        {
            "title": "lets-settle-this-part-two.md",
            "date": "Mon, 30 Jul 2018 00:34:50 GMT",
            "slug": "Let’s settle ‘this’ — Part Two",
            "category": "",
            "tag": "",
            "des": "Hey! Welcome to part two of Let’s settle ‘this’ where we are trying to demystify one of JavaScript’s least understood aspect — the ‘this’ keyword. If you haven’t checked out part one yet you might wan……"
        },
        {
            "title": "lets-settle-this-part-one.md",
            "date": "Mon, 30 Jul 2018 00:34:49 GMT",
            "slug": "Let’s settle ‘this’ — Part One",
            "category": "",
            "tag": "",
            "des": "Can’t we all relate to this? At some point ‘this’ has been a thing to think about for almost all JavaScript developers. For me, whenever ‘this’ started to rear its ugly head I somehow managed to make ……"
        },
        {
            "title": "a-simple-guide-to-understanding-javascript-es6-generators.md",
            "date": "Tue, 24 Jul 2018 01:34:38 GMT",
            "slug": "Javascript（ES6）Generator 入门",
            "category": "",
            "tag": "",
            "des": "如果你在过去两到五年中一直在研究 JavaScript，那么肯定看过关于 Generator 和 Iterator 的文章。虽然 Generator 和 Iterator 本质上是相关的，但 Generator 似乎比 Iterator 更令人难以理解。Iterator 由 Iterable 对象（如 map，数组和字符串等）实现，我们能够使用 next() 迭代它们。Iterator 在 Gen……"
        },
        {
            "title": "how-i-automated-my-job-with-node-js.md",
            "date": "Tue, 24 Jul 2018 01:34:38 GMT",
            "slug": "我如何使用 Node.js 来实现工作自动化",
            "category": "",
            "tag": "",
            "des": "您知道在工作中有很多必须完成的繁琐任务：更新配置文件,复制和粘贴文件，更新 Jira 任务。一段时间之后,这些工作的消耗时间会逐渐累积。2016 年，我在一家网络游戏公司工作时，情况就是如此。为游戏构建可配置的模板对于游戏开发来说是一项非常有意义的工作，但我大约 70% 的时间都花在了复制这些游戏模板和部署这些重新封装的实现上。公司 reskin 的定义是指使用相同的游戏机制，屏幕和元素的定位，但……"
        },
        {
            "title": "energy-sector-now-on-blockchain-based-cryptocurrency.md",
            "date": "Tue, 10 Jul 2018 02:08:28 GMT",
            "slug": "能源行业聚焦基于区块链技术的加密货币",
            "category": "",
            "tag": "",
            "des": "Envion 是一家在瑞士注册的区块链公司，专注于提供挖矿基础设施以及区块链挖掘技术。该公司为了实现全球可再生能源的价值最大化，提供了很好的解决方案。加密货币的重商主义（商业本位）属性受到了全球的追捧，因此 Envion 试图彻底改变数字货币的挖掘方式。目前像挖掘比特币这样的加密货币需要非常精密的硬件来处理高级运算。为了扩大能源产业链的价值，Envion 建立了一套覆盖全球的智能系统，该系统由卫星……"
        },
        {
            "title": "envion-a-name-of-mining-in-block-chain-to-support-renewable-energy.md",
            "date": "Tue, 10 Jul 2018 02:08:28 GMT",
            "slug": "Envion 通过区块链采矿来支持可再生能源的发展",
            "category": "",
            "tag": "",
            "des": "IT 产业是世界最大的电力消费领域之一。它的电力消耗约为每年 500 太瓦时，相当于整个欧洲和日本的发电量之和，也接近于全球发电量的 100%。在这个领域，仅云计算就每年消耗 416 太瓦时，几乎与整个航空业的碳排放量相当，并且增长迅速：大约每四年云计算的电力消耗将翻一番。到 2020 年，这个数字将增加 400 太瓦时，可能超过中国的年电力消费，到 2030 年，可能会赶超全球第一大电力消费国：……"
        },
        {
            "title": "vuejs-or-react-which-you-would-chose-and-why.md",
            "date": "Mon, 02 Jul 2018 00:43:26 GMT",
            "slug": "Vue.js 还是 React？你会选择哪一个？为什么？",
            "category": "",
            "tag": "",
            "des": "两者之间的区别很有意思，但不仅仅局限于 JSX 与 Templates 或者丰富的 API 与少量的 API 的区别。React 和 Vue 两者之间的选择可能导致截然不同的结果，这一点在你一开始选择的时候可能并没有意识到。当选择一个框架的时候，一个重要的问题是「我希望项目的复杂性在哪个部分」。React 和 Vue 可以完成很多相同的东西，但它们的实现方式截然不同。从一些反馈来看，我很好奇是否有……"
        },
        {
            "title": "maybe-you-dont-need-rust-to-speed-up-your-js-2.md",
            "date": "Mon, 02 Jul 2018 00:43:26 GMT",
            "slug": "或许你并不需要 Rust 和 WASM 来提升 JS 的执行效率 — 第二部分",
            "category": "",
            "tag": "",
            "des": "以下内容为本系列文章的第二部分，如果你还没看第一部分，请移步或许你并不需要 Rust 和 WASM 来提升 JS 的执行效率 — 第一部分。我尝试过三种不同的方法对 Base64 VLQ 段进行解码。第一个是 decodeCached，它与 source-map 使用的默认实现方式完全相同 — 我已经在上面列出了：第二个是 decodeNoCaching。它实际上就是没有缓存的 decodeCac……"
        },
        {
            "title": "maybe-you-dont-need-rust-to-speed-up-your-js-1.md",
            "date": "Mon, 02 Jul 2018 00:43:26 GMT",
            "slug": "或许你并不需要 Rust 和 WASM 来提升 JS 的执行效率 — 第一部分",
            "category": "",
            "tag": "",
            "des": "几个星期前，我在 Twitter 上看到一篇名为 “Oxidizing Source Maps with Rust and WebAssembly” 的推文，其内容主要是讨论用 Rust 编写的 WebAssembly 替换 source-map 库中纯 JavaScript 编写的核心代码所带来的性能优势。这篇文章使我感兴趣的原因，并不是因为我擅长 Rust 或 WASM，而是因为我总是对语言特……"
        },
        {
            "title": "introduction-to-accessibility-for-android-apps-and-games.md",
            "date": "Mon, 02 Jul 2018 00:43:26 GMT",
            "slug": "安卓应用和游戏的无障碍开发介绍",
            "category": "",
            "tag": "",
            "des": "虽然我们的目标是设计和开发迎合广大受众群体的应用，但我们不应该忘记，使用安卓和 Google Play 的用户中还有相当一部分是残疾人。据 世界卫生组织 估计，世界人口的 15％，大约 10 亿人，有不同程度的听力，视觉，认知以及运动功能方面的残疾。这些会影响到他们与科技之间进行互动的方式，让每个人在 Google Play 和 Android 上使用他们最喜欢的应用时感到舒适对我们来说很重要。我……"
        },
        {
            "title": "a-real-world-comparison-of-front-end-frameworks-with-benchmarks-2018-update.md",
            "date": "Fri, 15 Jun 2018 06:13:16 GMT",
            "slug": "前端开发框架的实战对比（2018 年更新）",
            "category": "",
            "tag": "",
            "des": "本文是是对 2017 年 12 月发表的 前端开发框架的实战对比 一文的更新。在对比中，我们将展示不同框架之间去实现几乎相同的 实战示例应用 有怎样的差别。实战示例应用 为我们提供了：✅ Angular 没有用于生产环境。之前实战应用仓库列出的示例应用使用的是一个开发版本，感谢 Jonathan Faircloth，它现在已经是生产版本！✅ Vue 没有包含在实战应用仓库，因此未包括在对比中。正如……"
        },
        {
            "title": "a-simple-guide-to-es6-promises.md",
            "date": "Thu, 07 Jun 2018 06:46:50 GMT",
            "slug": "一个简单的 ES6 Promise 指南",
            "category": "",
            "tag": "",
            "des": "The woods are lovely, dark and deep. But I have promises to keep, and miles to go before I sleep. — Robert FrostPromise 是 JavaScript ES6 中最令人兴奋的新增功能之一。为了支持异步编程，JavaScript 使用了回调（callbacks），以及一些其他的技术。然而……"
        },
        {
            "title": "vuex-perfect-interface-frontend-backend.md",
            "date": "Thu, 07 Jun 2018 06:46:50 GMT",
            "slug": "为什么 VueX 是前端与 API 之间的完美接口",
            "category": "",
            "tag": "",
            "des": "前端 Web 开发复杂性的增加促进了前后端专业化和前后端分离。这种专业化和复杂性的增加有许多好处 —— 网络用户体验的质量呈指数级增长，同时，更多的人将通过多种设备连接彼此，这是史无前例的。但是，它也带来了一些挑战。前端和 API 之间接口的摩擦、挑战和复杂性是一个常见的问题。理想状态下，后端和前端将通过紧密的通信和谐共处，后端提供的数据将完全匹配前端所需的数据。实际上，应用程序的这两个部分通常由……"
        }
    ]
}