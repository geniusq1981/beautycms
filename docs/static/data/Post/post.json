{
    "count": 31,
    "data": [
        {
            "title": "articles-website-design-mistakes.md",
            "date": "Fri, 24 Aug 2018 05:01:37 GMT",
            "slug": "常见网页设计错误一览",
            "category": "前端",
            "tag": "",
            "des": "简单的排版和设计诀窍，助力你编写出出色的网页1. 页面内容没有分割成逻辑区域如果页面信息被分组形成逻辑区域，用户会更容易看懂。请把内边距（Padding）设置成 120 像素到 180 像素，并且通过背景色把不同文本区域分开。不同组的相关信息间没有设置边距，而且这个设计需要用色块把页面划分出逻辑区域。所以，目前这些信息让人很难看懂，而且文字的区域分组也很不清晰。  边距足够大，而且不同区域通过背景……",
            "tags": "Javascript"
        },
        {
            "title": "7-javascript-eeg-mind-reading-libraries-for-2018.md",
            "date": "Fri, 24 Aug 2018 05:01:37 GMT",
            "slug": "2018 年七个通过脑电图分析实现“读心术”的 Javascript 库",
            "category": "人工智能",
            "tag": "",
            "des": "“这个头戴装置是不是很酷？”脑电图是一种检测人脑中生物电活动的方法。它可以用来检测人体状态，比如癫痫或者脑瘤，以此来研究脑活动与认知方面的联系，或者用来学习人脑是如何对外部刺激产生反应，比如音乐或影像。尽管相比其他方法，此方法还不够成熟，但是在一些方面它的用途还是很大的 — 可以通过外部设备将大脑活动转化成行为（比如装备激光武器的机器人军队）。在脑电图信号的开发领域（由类似 openBCI 这样的……",
            "tags": "脑电波"
        },
        {
            "title": "how-to-scrape-websites-with-python-and-beautifulsoup.md",
            "date": "Fri, 17 Aug 2018 06:13:23 GMT",
            "slug": "如何使用 Python 和 BeautifulSoup 爬取网站内容",
            "category": "大数据",
            "tag": "",
            "des": "互联网上的信息量比任何一个人究其一生所能掌握的信息量都要大的多。所以我们要做的不是在互联网上逐个访问信息，而是需要有一种灵活的方式来收集，整理和分析这些信息。我们需要爬取网页数据。网页爬虫可以自动提取出数据并将数据以一种你可以容易理解的形式呈现出来。在本教程中，我们将重点关注爬虫技术在金融市场中的应用，但实际上网络内容爬取可用于多个领域。如果你是一个狂热的投资者，每天获知收盘价可能会是一件很痛苦的……",
            "tags": "Python"
        },
        {
            "title": "optimizing-mp4-video-for-fast-streaming.md",
            "date": "Fri, 17 Aug 2018 06:13:23 GMT",
            "slug": "优化 MP4 视频以获得更快的流传输速度",
            "category": "前端",
            "tag": "",
            "des": "随着 Flash 的衰落 和 移动设备的爆炸式增长，越来越多的内容正在以 HTML5 视频的方式发布。你可以通过 用 HTML5 视频片段代替 GIF 动画 的方式来优化你的网站速度。然而，视频文件本身就有大量可优化的地方，你可以借此提升它们的性能。其中最重要的一点是视频文件必须经过适当优化才能作为 HTML5 视频在线播放。如果没有这种优化，视频可能会延迟数百毫秒，而只是试图播放视频的访问者也可……",
            "tags": "streaming"
        },
        {
            "title": "lets-settle-this-part-one.md",
            "date": "Wed, 08 Aug 2018 07:49:36 GMT",
            "slug": "让我们一起解决“this”难题 — 第一部分",
            "category": "前端",
            "tag": "",
            "des": "难道我们就不能彻底搞清楚“this”吗？在某种程度上，几乎所有的 JavaScript 开发人员都曾经思考过“this”这个事情。对我来说，每当“this”出来捣乱的时候，我就会想方设法地去解决掉它，但过后就把它忘了，我想你应该也曾遇到过类似的场景。但是今天，让我们弄明白它，让我们一次性地彻底解决“this”的问题，一劳永逸。前几天，我在图书馆遇到了一个意想不到的事情。这本书的整个第二章都是关于“……",
            "tags": "Javascript"
        },
        {
            "title": "lets-settle-this-part-two.md",
            "date": "Wed, 08 Aug 2018 07:49:36 GMT",
            "slug": "让我们一起解决“this”难题 — 第二部分",
            "category": "前端",
            "tag": "",
            "des": "嗨！欢迎来到让我们一起解决“this”难题的第二部分，我们试图揭开 JavaScript 中最难让人理解的一部分内容 - “this”关键字的神秘面纱。如果您还没有读过 第一部分，你需要先把它读一下。在第一部分中，我们通过 15 个示例介绍了默认绑定规则和隐式绑定规则。我们了解了函数内部的“this”如何随着函数调用方式的不同而发生改变。最后，我们也介绍了箭头函数以及它是如何进行词法绑定。我希望你……",
            "tags": "Javascript"
        },
        {
            "title": "i-created-the-exact-same-app-in-react-and-vue-here-are-the-differences.md",
            "date": "Tue, 07 Aug 2018 01:52:34 GMT",
            "slug": "用 React 和 Vue 创建了两个完全相同的应用后，发现了这些差异",
            "category": "前端",
            "tag": "",
            "des": "在工作中使用 Vue 一段时间后，对它的工作原理有了相当深入的了解。然而，我很想知道篱笆另一边的草地是什么样 - React。我已经阅读了 React 文档，也观看了一些教程视频，虽然它们都很棒，但我真正想知道的是 React 与 Vue 到底有什么不同。这里的「不同」不是指它们是否具有虚拟 DOM 或者它们如何渲染页面。我希望有人能直接解释代码并告诉我会发生什么！我想找到一篇能解释这些差异的文章……",
            "tags": "框架"
        },
        {
            "title": "how-to-rewrite-your-sql-queries-in-pandas-and-more.md",
            "date": "Mon, 30 Jul 2018 00:34:50 GMT",
            "slug": "如何使用 Pandas 重写你的 SQL 查询以及其他操作",
            "category": "大数据",
            "tag": "",
            "des": "15 年前，软件开发人员只需掌握很少的一些技能，他或她就有机会获得 95% 的工作机会。这些技能包括：当您需要快速浏览一些数据并得出初步结论时，SQL 是一种常用的工具，这些结论可能会产生一个分析报告或者是编写一个应用程序。这被称之为 探索性分析。现如今，数据会以各种各样的形式出现，不再仅仅是“关系型数据库”的同义词。您的数据可能会是 CSV 文件、纯文本、Parquet、HDF5，或者其他什么格……",
            "tags": "Pandas"
        },
        {
            "title": "make-3d-flip-animation-in-flutter.md",
            "date": "Tue, 24 Jul 2018 01:34:38 GMT",
            "slug": "使用 Flutter 制作 3D 翻转动画",
            "category": "Mobile",
            "tag": "",
            "des": "从 UI 挑战中学习 Flutter作为我的第一篇文章的续篇，我将开始新的挑战。这个将比前一个（微光闪烁）复杂一点。我称之为翻转动画：这已经足够值得挑战了，不是吗？是的，我们将制作一个看起来有些类 3D 效果的动画。乍一看，有个很简单的想法：我们有一堆面板，每个面板被分成两半，每一半可以围绕 X 轴旋转并显示下一个面板。如何用代码实现呢？我把它分为了两个小任务：那么 Flutter 如何帮助我们呢……",
            "tags": "Flutter"
        },
        {
            "title": "a-simple-guide-to-understanding-javascript-es6-generators.md",
            "date": "Tue, 24 Jul 2018 01:34:38 GMT",
            "slug": "Javascript（ES6）Generator 入门",
            "category": "前端",
            "tag": "",
            "des": "如果你在过去两到五年中一直在研究 JavaScript，那么肯定看过关于 Generator 和 Iterator 的文章。虽然 Generator 和 Iterator 本质上是相关的，但 Generator 似乎比 Iterator 更令人难以理解。Iterator 由 Iterable 对象（如 map，数组和字符串等）实现，我们能够使用 next() 迭代它们。Iterator 在 Gen……",
            "tags": "ES6"
        },
        {
            "title": "making-a-todo-app-with-flutter.md",
            "date": "Tue, 24 Jul 2018 01:34:38 GMT",
            "slug": "用 Flutter 写一个待办事项应用",
            "category": "Mobile",
            "tag": "",
            "des": "Flutter 是 Google 对 React Native 的回应，它允许开发人员为 Android 和 iOS 创建原生应用。与用 JSX 编写的 React Native 不同，Flutter 应用程序是用 Google 的 Dart 语言编写的.Flutter 仍处于技术测试阶段，但它的工具非常稳定，并提供了流畅的开发体验。在这篇文章中，我将讲解如何使用 Flutter 创建一个简单的待……",
            "tags": "Flutter"
        },
        {
            "title": "how-i-automated-my-job-with-node-js.md",
            "date": "Tue, 24 Jul 2018 01:34:38 GMT",
            "slug": "我如何使用 Node.js 来实现工作自动化",
            "category": "自动化",
            "tag": "",
            "des": "您知道在工作中有很多必须完成的繁琐任务：更新配置文件,复制和粘贴文件，更新 Jira 任务。一段时间之后,这些工作的消耗时间会逐渐累积。2016 年，我在一家网络游戏公司工作时，情况就是如此。为游戏构建可配置的模板对于游戏开发来说是一项非常有意义的工作，但我大约 70% 的时间都花在了复制这些游戏模板和部署这些重新封装的实现上。公司 reskin 的定义是指使用相同的游戏机制，屏幕和元素的定位，但……",
            "tags": "Node.js"
        },
        {
            "title": "make-shimmer-effect-in-flutter.md",
            "date": "Tue, 24 Jul 2018 01:34:38 GMT",
            "slug": "在 Flutter 中实现微光闪烁效果",
            "category": "Mobile",
            "tag": "",
            "des": "通过挑战 UI 制作来学习 Flutter我是一个狂热的移动开发者，Android 平台和 iOS 平台开发都有涉及。过去我不相信任何跨平台的开发框架（Ionic，Xamarin，ReactNative），但现在我要讲一下我遇到跨平台开发框架 Flutter 之后的故事。作为一名原生应用开发人员，我深深感到 UI 定制开发是多么痛苦，即使是使用跨平台开发框架去进行开发，这种痛苦也不能得到缓解，有时……",
            "tags": "Flutter"
        },
        {
            "title": "envion-a-name-of-mining-in-block-chain-to-support-renewable-energy.md",
            "date": "Tue, 10 Jul 2018 02:08:28 GMT",
            "slug": "Envion 通过区块链采矿来支持可再生能源的发展",
            "category": "区块链",
            "tag": "",
            "des": "IT 产业是世界最大的电力消费领域之一。它的电力消耗约为每年 500 太瓦时，相当于整个欧洲和日本的发电量之和，也接近于全球发电量的 100%。在这个领域，仅云计算就每年消耗 416 太瓦时，几乎与整个航空业的碳排放量相当，并且增长迅速：大约每四年云计算的电力消耗将翻一番。到 2020 年，这个数字将增加 400 太瓦时，可能超过中国的年电力消费，到 2030 年，可能会赶超全球第一大电力消费国：……",
            "tags": "Envion"
        },
        {
            "title": "energy-sector-now-on-blockchain-based-cryptocurrency.md",
            "date": "Tue, 10 Jul 2018 02:08:28 GMT",
            "slug": "能源行业聚焦基于区块链技术的加密货币",
            "category": "区块链",
            "tag": "",
            "des": "Envion 是一家在瑞士注册的区块链公司，专注于提供挖矿基础设施以及区块链挖掘技术。该公司为了实现全球可再生能源的价值最大化，提供了很好的解决方案。加密货币的重商主义（商业本位）属性受到了全球的追捧，因此 Envion 试图彻底改变数字货币的挖掘方式。目前像挖掘比特币这样的加密货币需要非常精密的硬件来处理高级运算。为了扩大能源产业链的价值，Envion 建立了一套覆盖全球的智能系统，该系统由卫星……",
            "tags": "Envion"
        },
        {
            "title": "vuejs-or-react-which-you-would-chose-and-why.md",
            "date": "Mon, 02 Jul 2018 00:43:26 GMT",
            "slug": "Vue.js 还是 React？你会选择哪一个？为什么？",
            "category": "前端",
            "tag": "",
            "des": "两者之间的区别很有意思，但不仅仅局限于 JSX 与 Templates 或者丰富的 API 与少量的 API 的区别。React 和 Vue 两者之间的选择可能导致截然不同的结果，这一点在你一开始选择的时候可能并没有意识到。当选择一个框架的时候，一个重要的问题是「我希望项目的复杂性在哪个部分」。React 和 Vue 可以完成很多相同的东西，但它们的实现方式截然不同。从一些反馈来看，我很好奇是否有……",
            "tags": "框架"
        },
        {
            "title": "maybe-you-dont-need-rust-to-speed-up-your-js-1.md",
            "date": "Mon, 02 Jul 2018 00:43:26 GMT",
            "slug": "或许你并不需要 Rust 和 WASM 来提升 JS 的执行效率 — 第一部分",
            "category": "前端",
            "tag": "",
            "des": "几个星期前，我在 Twitter 上看到一篇名为 “Oxidizing Source Maps with Rust and WebAssembly” 的推文，其内容主要是讨论用 Rust 编写的 WebAssembly 替换 source-map 库中纯 JavaScript 编写的核心代码所带来的性能优势。这篇文章使我感兴趣的原因，并不是因为我擅长 Rust 或 WASM，而是因为我总是对语言特……",
            "tags": "Javascript"
        },
        {
            "title": "introduction-to-accessibility-for-android-apps-and-games.md",
            "date": "Mon, 02 Jul 2018 00:43:26 GMT",
            "slug": "安卓应用和游戏的无障碍开发介绍",
            "category": "Mobile",
            "tag": "",
            "des": "虽然我们的目标是设计和开发迎合广大受众群体的应用，但我们不应该忘记，使用安卓和 Google Play 的用户中还有相当一部分是残疾人。据 世界卫生组织 估计，世界人口的 15％，大约 10 亿人，有不同程度的听力，视觉，认知以及运动功能方面的残疾。这些会影响到他们与科技之间进行互动的方式，让每个人在 Google Play 和 Android 上使用他们最喜欢的应用时感到舒适对我们来说很重要。我……",
            "tags": "Android"
        },
        {
            "title": "maybe-you-dont-need-rust-to-speed-up-your-js-2.md",
            "date": "Mon, 02 Jul 2018 00:43:26 GMT",
            "slug": "或许你并不需要 Rust 和 WASM 来提升 JS 的执行效率 — 第二部分",
            "category": "前端",
            "tag": "",
            "des": "以下内容为本系列文章的第二部分，如果你还没看第一部分，请移步或许你并不需要 Rust 和 WASM 来提升 JS 的执行效率 — 第一部分。我尝试过三种不同的方法对 Base64 VLQ 段进行解码。第一个是 decodeCached，它与 source-map 使用的默认实现方式完全相同 — 我已经在上面列出了：第二个是 decodeNoCaching。它实际上就是没有缓存的 decodeCac……",
            "tags": "Javascript"
        },
        {
            "title": "a-real-world-comparison-of-front-end-frameworks-with-benchmarks-2018-update.md",
            "date": "Fri, 15 Jun 2018 06:13:16 GMT",
            "slug": "前端开发框架的实战对比（2018 年更新）",
            "category": "前端",
            "tag": "",
            "des": "本文是是对 2017 年 12 月发表的 前端开发框架的实战对比 一文的更新。在对比中，我们将展示不同框架之间去实现几乎相同的 实战示例应用 有怎样的差别。实战示例应用 为我们提供了：✅ Angular 没有用于生产环境。之前实战应用仓库列出的示例应用使用的是一个开发版本，感谢 Jonathan Faircloth，它现在已经是生产版本！✅ Vue 没有包含在实战应用仓库，因此未包括在对比中。正如……",
            "tags": "框架"
        },
        {
            "title": "a-simple-guide-to-es6-promises.md",
            "date": "Thu, 07 Jun 2018 06:46:50 GMT",
            "slug": "一个简单的 ES6 Promise 指南",
            "category": "前端",
            "tag": "",
            "des": "The woods are lovely, dark and deep. But I have promises to keep, and miles to go before I sleep. — Robert FrostPromise 是 JavaScript ES6 中最令人兴奋的新增功能之一。为了支持异步编程，JavaScript 使用了回调（callbacks），以及一些其他的技术。然而……",
            "tags": "ES6"
        },
        {
            "title": "vuex-perfect-interface-frontend-backend.md",
            "date": "Thu, 07 Jun 2018 06:46:50 GMT",
            "slug": "为什么 VueX 是前端与 API 之间的完美接口",
            "category": "前端",
            "tag": "",
            "des": "前端 Web 开发复杂性的增加促进了前后端专业化和前后端分离。这种专业化和复杂性的增加有许多好处 —— 网络用户体验的质量呈指数级增长，同时，更多的人将通过多种设备连接彼此，这是史无前例的。但是，它也带来了一些挑战。前端和 API 之间接口的摩擦、挑战和复杂性是一个常见的问题。理想状态下，后端和前端将通过紧密的通信和谐共处，后端提供的数据将完全匹配前端所需的数据。实际上，应用程序的这两个部分通常由……",
            "tags": "Vue"
        },
        {
            "title": "how-javascript-works-inside-the-networking-layer-how-to-optimize-its-performance-and-security.md",
            "date": "Wed, 30 May 2018 05:15:35 GMT",
            "slug": "JavaScript 是如何工作的：深入网络层 + 如何优化性能和安全",
            "category": "前端",
            "tag": "",
            "des": "这是探索 JavaScript 及其内建组件系列文章的第 12 篇。在认识和描述这些核心元素的过程中，我们也会分享我们在构建 SessionStack 时所遵循的一些经验规则。SessionStack 是一个轻量级 JavaScript 应用，它协助用户实时查看和复现他们的 Web 应用缺陷，因此其自身不仅需要足够健壮还要有不俗的性能表现。如果你错过了前面的文章，你可以在下面找到它们：正如我们在前……",
            "tags": "Javascript"
        },
        {
            "title": "how-javascript-works-tracking-changes-in-the-dom-using-mutationobserver.md",
            "date": "Wed, 30 May 2018 05:15:35 GMT",
            "slug": "JavaScript 是如何工作的：用 MutationObserver 追踪 DOM 的变化",
            "category": "前端",
            "tag": "",
            "des": "本系列专门研究 JavaScript 及其构建组件，这是第 10 期。在识别和描述核心元素的过程中，我们也分享了一些构建 SessionStack 的重要法则，SessionStack 是一个 JavaScript 应用，为了帮助用户实时查看和再现他们的 web 应用程序缺陷，它需要健壮并且高性能。web 应用正在持续的越来越侧重客户端，这是由很多原因造成的，例如需要更丰富的 UI 来承载复杂应用……",
            "tags": "Javascript"
        },
        {
            "title": "how-javascript-works-a-comparison-with-webassembly-why-in-certain-cases-its-better-to-use-it.md",
            "date": "Wed, 30 May 2018 05:15:35 GMT",
            "slug": "JavaScript 是如何工作的：对比 WebAssembly + 为什么在某些场景下它比 JavaScript 更合适",
            "category": "前端",
            "tag": "",
            "des": "这是专门探索 JavaScript 及其构建组件系列的第 6 期。在识别和描述核心元素的过程中，我们还分享了构建 SessionStack 时使用的一些经验法则 —— 这是一个轻量级的 JavaScript 应用程序，但必须强大且性能卓越，才能帮助用户实时查看和重现其 Web 应用的缺陷。这次我们将剖析 WebAssembly 的工作原理，更重要的是在性能方面分析它与 JavaScript 的差异……",
            "tags": "Javascript"
        },
        {
            "title": "how-javascript-works-under-the-hood-of-css-and-js-animations-how-to-optimize-their-performance.md",
            "date": "Wed, 30 May 2018 05:15:35 GMT",
            "slug": "JavaScript 是如何工作的：CSS 和 JS 动画背后的原理 + 如何优化性能",
            "category": "前端",
            "tag": "",
            "des": "这是专门探索 JavaScript 及其构建组件系列的第 13 篇文章。在识别和描述核心元素的过程中，我们还分享了构建 SessionStack 时的一些经验法则，SessionStack 是一个足够强大且高性能的 JavaScript 应用程序，用来帮助用户实时查看和重现其 Web 应用程序的缺陷。如果你错过了前面的章节，你可以在这里找到它们：你也知道，动画在创造吸引人的 web app 中扮演……",
            "tags": "Javascript"
        },
        {
            "title": "how-javascript-works-the-rendering-engine-and-tips-to-optimize-its-performance.md",
            "date": "Wed, 30 May 2018 05:15:35 GMT",
            "slug": "JavaScript 是如何工作的：渲染引擎和性能优化技巧",
            "category": "前端",
            "tag": "",
            "des": "这是探索 JavaScript 及其构建组件专题系列的第 11 篇。在识别和描述核心元素的过程中，我们分享了在构建 SessionStack 时使用的一些经验法则。SessionStack 是一个需要鲁棒且高性能的 JavaScript 应用程序，它帮助用户实时查看和重现它们 Web 应用程序的缺陷。当构建 Web 应用程序时，你不只是编写独立运行的 JavaScript 代码片段。你编写的 Ja……",
            "tags": "Javascript"
        },
        {
            "title": "how-javascript-works-the-mechanics-of-web-push-notifications.md",
            "date": "Wed, 30 May 2018 05:15:35 GMT",
            "slug": "JavaScript 是如何工作的：Web 推送通知的机制",
            "category": "前端",
            "tag": "",
            "des": "这是专门研究 JavaScript 及其构建组件系列文章的第 9 章。在识别和描述核心元素的过程中，我们还分享了我们在构建一个轻量级 JavaScript 应用程序 SessionStack 时使用的一些经验规则，该应用程序需要健壮、高性能，可以帮助用户实时查看和重现它们的 Web 应用程序缺陷。如果你错过了前几章，你可以在这里找到它们：今天，我们来关注 Web 推送通知：我们将了解它们的构建组件……",
            "tags": "Javascript"
        },
        {
            "title": "how-javascript-works-service-workers-their-life-cycle-and-use-cases.md",
            "date": "Wed, 30 May 2018 05:15:35 GMT",
            "slug": "JavaScript 是如何工作的：Service Worker 的生命周期与使用场景",
            "category": "前端",
            "tag": "",
            "des": "这是专门探索 JavaScript 及其构建组件的系列的第八个。在识别和描述核心元素的过程中，我们也分享了一些我们在构建 SessionStack 时的最佳实践。SessionStack 是一个强大且性能卓越的 JavaScript 应用程序，可以向你实时显示用户在 Web 应用程序中遇到技术问题或用户体验问题时的具体情况。如果你没看过之前的章节，你可以在这里看到：你可能已经知道了渐进式 Web ……",
            "tags": "Javascript"
        },
        {
            "title": "architecting-single-page-applications.md",
            "date": "Wed, 30 May 2018 05:15:35 GMT",
            "slug": "关于 SPA，你需要掌握的 4 层",
            "category": "前端",
            "tag": "",
            "des": "每个成功的项目都需要一个清晰的架构，这对于所有团队成员都是心照不宣的。试想一下，作为团队的新人。技术负责人给你介绍了在项目进程中提出的新应用程序的架构。然后告诉你需求：我们的应用程序将显示一系列文章。用户能够创建、删除和收藏文章。然后他说，去做吧！我选择 FaceBook 开源的构建工具 Create React App，使用 Flow 来进行类型检查。简单起见，先忽略样式。作为先决条件，让我们讨……",
            "tags": "WebApp"
        }
    ]
}